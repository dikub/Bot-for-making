from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import requests
import json
from datetime import datetime
import traceback

def parse_date(date_str):
    return datetime.strptime(date_str, "%d.%m.%Y")

def send_telegram_message(message):
    bot_token = "     "
    chat_id = "  "
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    data = {"chat_id": chat_id, "text": message}
    try:
        requests.post(url, data=data)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", e)

# –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
try:
    with open("settings.json", "r") as f:
        settings = json.load(f)
except Exception as e:
    print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ settings.json:", e)
    exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Chrome
try:
    options = webdriver.ChromeOptions()
    options.add_argument('--headless')
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-dev-shm-usage')
    options.add_argument('--disable-gpu')
    options.add_argument('--window-size=1920,1080')
    options.add_argument('--disable-extensions')

    driver = webdriver.Chrome(options=options)
    wait = WebDriverWait(driver, 10)
except Exception as e:
    print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebDriver:")
    traceback.print_exc()
    exit(1)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while True:
    success = False
    try:
        print("üåê –û—Ç–∫—Ä—ã–≤–∞—é —Å–∞–π—Ç...")
        driver.get("https://lekar.medtut.by/cgi-bin/is10_08?sSd_=0&sfil_n=1&svid_=5&stst_=0&sgr_l=170&shead_=0&sit_l=210&style_=1&app_=0")

        print("üîê –í–≤–æ–¥ –ª–æ–≥–∏–Ω–∞/–ø–∏–Ω...")
        login_input = wait.until(EC.presence_of_element_located((By.ID, "n_id")))
        login_input.send_keys(settings["login"])

        pin_input = wait.until(EC.presence_of_element_located((By.ID, "n_pin")))
        pin_input.send_keys(settings["pin"])

        wait.until(EC.element_to_be_clickable((By.XPATH, "//font[contains(text(), '–í–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç')]/.."))).click()

        print("üìã –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—Ä–∞—á—É...")
        wait.until(EC.element_to_be_clickable((By.XPATH, "//th[.//font[contains(text(), '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º')]]"))).click()
        print("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º")
        wait.until(EC.element_to_be_clickable((By.XPATH, "//td[.//font[contains(text(), '–ì–æ–º–µ–ª—å—Å–∫–∞—è –≥–æ—Ä–æ–¥—Å–∫–∞—è –∫–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞ N3')]]"))).click()
        print("–ì–æ–º–µ–ª—å—Å–∫–∞—è –≥–æ—Ä–æ–¥—Å–∫–∞—è –∫–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞ N3")
        wait.until(EC.element_to_be_clickable((By.XPATH, "//th[contains(text(), '–í—Ä–∞—á - —Ö–∏—Ä—É—Ä–≥')]"))).click()
        print("–í—Ä–∞—á - —Ö–∏—Ä—É—Ä–≥")
        doctor_name = settings['doctor']
        xpath_doctor = f"//p[contains(normalize-space(.), '{doctor_name}')]"
        wait.until(EC.element_to_be_clickable((By.XPATH, xpath_doctor))).click()

        print("üìÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –¥–∞—Ç...")
        for date in settings["dates"]:
            try:
                element = WebDriverWait(driver, 3).until(EC.element_to_be_clickable(
                    (By.XPATH, f"//th[contains(text(), '{date}')]")
                ))
                element.click()

                for time_str in settings["times"]:
                    try:
                        xpath = f"//input[@type='button' and contains(@value, '{time_str}') and contains(@onclick, 'save_it')]"
                        btn = WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.XPATH, xpath)))
                        btn.click()

                        alert_text = ""
                        try:
                            WebDriverWait(driver, 3).until(EC.alert_is_present())
                            alert = driver.switch_to.alert
                            alert_text = alert.text
                            alert.accept()
                        except:
                            pass

                        try:
                            WebDriverWait(driver, 3).until(EC.alert_is_present())
                            alert = driver.switch_to.alert
                            alert_text = alert.text
                            alert.accept()
                        except:
                            pass

                        success = True
                        send_telegram_message(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ {date} {time_str}:\n{alert_text or '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞'}")
                        break
                    except:
                        continue
                if success:
                    break
            except:
                continue

        if not success:
            print("üìÜ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–∏–∂–∞–π—à–∏—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞—Ç...")
            try:
                available_dates = driver.find_elements(By.XPATH, f"//th[contains(@onclick, '{settings['doctor']}')]")
                if available_dates:
                    sorted_dates = sorted(
                        [(el.text.strip(), el) for el in available_dates if el.text.strip()],
                        key=lambda x: parse_date(x[0])
                    )
                    closest_date_text, el = sorted_dates[0]
                    el.click()
                    print(f"‚ÑπÔ∏è –ë–ª–∏–∂–∞–π—à–∞—è –¥–∞—Ç–∞: {closest_date_text}")

                    available_times = driver.find_elements(By.XPATH, "//input[@type='button' and contains(@onclick, 'save_it')]")
                    if available_times:
                        available_times[0].click()

                        alert_text = ""
                        try:
                            WebDriverWait(driver, 3).until(EC.alert_is_present())
                            alert = driver.switch_to.alert
                            alert_text = alert.text
                            alert.accept()
                        except:
                            pass

                        try:
                            WebDriverWait(driver, 3).until(EC.alert_is_present())
                            alert = driver.switch_to.alert
                            alert_text = alert.text
                            alert.accept()
                        except:
                            pass

                        success = True
                        send_telegram_message(f"‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é –¥–∞—Ç—É {closest_date_text}:\n{alert_text or '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞'}")
            except Exception as e:
                print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à—É—é –¥–∞—Ç—É:", e)

    except Exception as e:
        print("‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:")
        traceback.print_exc()

    if success:
        print("üèÅ –£—Å–ø–µ—à–Ω–∞—è –∑–∞–ø–∏—Å—å ‚Äî –≤—ã—Ö–æ–¥.")
        break
    else:
        print("üîÅ –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥...")
        time.sleep(30)
        try:
            driver.refresh()
        except:
            pass
        time.sleep(3)

